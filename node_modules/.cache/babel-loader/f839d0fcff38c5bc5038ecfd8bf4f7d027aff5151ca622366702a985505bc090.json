{"ast":null,"code":"var _jsxFileName = \"/Users/soumaligorai/Desktop/react-tailwind-spotify-clone/src/components/SongItem.js\",\n  _s = $RefreshSig$();\nimport { Icon } from \"Icons\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrent } from \"stores/player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongItem({\n  item\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    current,\n    playing,\n    controls\n  } = useSelector(state => state.player);\n  const imageStyle = item => {\n    switch (item.type) {\n      case 'artist':\n        return 'rounded-full';\n      case 'podcast':\n        return 'rounded-xl';\n      default:\n        return 'rounded';\n    }\n  };\n  const updateCurrent = () => {\n    if (current.id === item.id) {\n      if (playing) {\n        controls.pause();\n      } else {\n        controls.play();\n      }\n    } else {\n      dispatch(setCurrent(item));\n    }\n  };\n  const isCurrentItem = (current === null || current === void 0 ? void 0 : current.id) === item.id && playing;\n  return /*#__PURE__*/_jsxDEV(NavLink, {\n    to: \"/\",\n    className: \"bg-footer p-4 rounded hover:bg-active group\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pt-[100%] relative mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.image,\n        className: `absolute inset-0 object-cover w-full h-full ${imageStyle(item)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateCurrent,\n        className: `w-10 h-10 rounded-full bg-primary absolute group-hover:flex group-focus:flex bottom-2 right-2 items-center justify-center ${!isCurrentItem ? 'hidden' : 'flex'}`,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          name: isCurrentItem ? 'pause' : 'play',\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"overflow-hidden overflow-ellipsis whitespace-nowrap text-base font-semibold\",\n      children: item.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"line-clamp-2 text-link text-sm mt-1\",\n      children: item.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(SongItem, \"rz+gvZXPS8Zi4DnjjIltWAOJC8g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = SongItem;\nexport default SongItem;\nvar _c;\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"names":["Icon","NavLink","useDispatch","useSelector","setCurrent","jsxDEV","_jsxDEV","SongItem","item","_s","dispatch","current","playing","controls","state","player","imageStyle","type","updateCurrent","id","pause","play","isCurrentItem","to","className","children","src","image","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","size","title","description","_c","$RefreshReg$"],"sources":["/Users/soumaligorai/Desktop/react-tailwind-spotify-clone/src/components/SongItem.js"],"sourcesContent":["import {Icon} from \"Icons\";\nimport {NavLink} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { setCurrent } from \"stores/player\";\n\nfunction SongItem({ item }) {\n\n    const dispatch = useDispatch()\n    const { current, playing, controls } = useSelector(state => state.player)\n    const imageStyle = item => {\n        switch (item.type) {\n            case 'artist':\n                return 'rounded-full'\n\n            case 'podcast':\n                return 'rounded-xl'\n\n            default:\n                return 'rounded'\n        }\n    }\n\n    const updateCurrent = () => {\n        if (current.id === item.id) {\n            if (playing) {\n                controls.pause()\n            } else {\n                controls.play()\n            }\n        } else {\n            dispatch(setCurrent(item))\n        }\n    }\n\n    const isCurrentItem = (current?.id === item.id && playing)\n\n    return (\n        <NavLink\n            key={item.id}\n            to=\"/\"\n            className={\"bg-footer p-4 rounded hover:bg-active group\"}\n        >\n            <div className=\"pt-[100%] relative mb-4\">\n                <img src={item.image} className={`absolute inset-0 object-cover w-full h-full ${imageStyle(item)}`} />\n                <button\n                    onClick={updateCurrent}\n                    className={`w-10 h-10 rounded-full bg-primary absolute group-hover:flex group-focus:flex bottom-2 right-2 items-center justify-center ${!isCurrentItem ? 'hidden' : 'flex'}`}>\n                    <Icon name={isCurrentItem ? 'pause' : 'play'} size={16} />\n                </button>\n            </div>\n            <h6 className=\"overflow-hidden overflow-ellipsis whitespace-nowrap text-base font-semibold\">\n                {item.title}\n            </h6>\n            <p className=\"line-clamp-2 text-link text-sm mt-1\">\n                {item.description}\n            </p>\n        </NavLink>\n    )\n}\n\nexport default SongItem\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}